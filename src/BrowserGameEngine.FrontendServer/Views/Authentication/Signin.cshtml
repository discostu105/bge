@using Microsoft.AspNetCore.Authentication
@using Microsoft.Extensions.Options
@using BrowserGameEngine.FrontendServer
@model AuthenticationScheme[]
@inject IOptions<BgeOptions> options

@if (options.Value.DevAuth) {
    <form action="/signindev" method="post">
        <input type="text" name="PlayerId" />
        <button class="btn btn-lg btn-success m-1" type="submit">Direct Login (dev)</button>
    </form>
}

<div class="jumbotron">
    <h1>Authentication</h1>
    <p class="lead text-left">Sign in using one of these external providers:</p>

    @foreach (var scheme in Model.OrderBy(p => p.DisplayName)) {
        <form action="/signin" method="post">
            <input type="hidden" name="Provider" value="@scheme.Name" />
            <input type="hidden" name="ReturnUrl" value="@ViewBag.ReturnUrl" />

            <button class="btn btn-lg btn-success m-1" type="submit">Connect using @scheme.DisplayName</button>
        </form>
    }
</div>

<div class="jumbotron">
    @if (User?.Identity?.IsAuthenticated ?? false) {
        <h1>Welcome, @User.Identity.Name</h1>

        <p>
            @foreach (var claim in Context.User.Claims) {
                <div><code>@claim.Type</code>: <strong>@claim.Value</strong></div>
            }
        </p>

        <a class="btn btn-lg btn-danger" href="/signout?returnUrl=%2F">Sign out</a>
    } else {
        <h1>Welcome, anonymous</h1>
        <a class="btn btn-lg btn-success" href="/signin?returnUrl=%2F">Sign in</a>
    }
</div>